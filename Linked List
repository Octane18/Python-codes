class node:
    def __init__(self,  data, Pointer):
        self.data = data
        self.Pointer = Pointer 

def pushLL(data):
    global Root, FP, LL
    if FP == -1:
        print("Error list is full")
    else:
        NN = FP
        LL[NN].data = data
        CN = Root
        FP = LL[FP].Pointer
        PN = -1
        while CN != -1:
            PN = CN
            CN = LL[CN].Pointer
        if PN == -1:
            Root = NN
            LL[NN].Pointer = -1
        else:
            LL[PN].Pointer = NN
            LL[NN].Pointer = CN

def pullLL(data):
    global FP, Root, LL
    if FP == 0: 
        print("Error list is empty")
    else: 
        PN = -1
        CN = Root 
        while LL[CN].data != data and CN != -1:
            PN = CN 
            CN = LL[CN].Pointer
        if CN == Root:
            Root = LL[CN].Pointer
            LL[CN].Pointer = FP
            FP = CN 
        elif LL[CN].data != data:
            print("data not found")
        else:
            LL[PN].Pointer = LL[CN].Pointer 
            LL[CN].Pointer = FP 
            FP = CN
                   

def printLL():
    for x in range(10):
        print(LL[x].data, LL[x].Pointer, sep = '   ')
    print(FP, Root)
    





Root = -1
FP = 0
LL = []
for x in range(9):
    LL.append(node(0, x+1))
LL.append(node(0, -1))

Option = int(input("What option: "))
while Option != -1:
    if Option == 1:
        data = int(input("Enter data: "))
        pushLL(data)
    elif Option == 2:
        data = int(input("Enter data to delete: "))
        pullLL(data)
    elif Option == 3: printLL()
    Option = int(input("What option: "))

